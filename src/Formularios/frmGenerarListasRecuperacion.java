/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frmGenerarReportes.java
 *
 * Created on 16-abr-2012, 19:41:18
 */
package Formularios;

import Controladores.ctrlAlumnosGrupo;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import Controladores.ctrlCicloEscolar;
import Controladores.ctrlGrupos;
import Entidades.CicloEscolar;


import Controladores.ctrlOfertaAcademica;
import Entidades.AlumnosRecuperacion;
import Entidades.EncabezadoListasAsistencia;
import Entidades.Grupos;
import Entidades.OfertaAcademica;
import Entidades.Personal;
import Entidades.Usuarios;
import Reportes.JRDListaRecuperacion;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Last Develop
 */
public class frmGenerarListasRecuperacion extends javax.swing.JDialog {

    /** Creates new form frmGenerarReportes */
    
    private Usuarios sesion =null;
    private CicloEscolar cicloActivo=null;
    public Usuarios getSesion() {
        return sesion;
    }

    public void setSesion(Usuarios sesion) {
        this.sesion = sesion;
    }
    
    
    public frmGenerarListasRecuperacion(java.awt.Frame parent, boolean modal) throws SQLException, ClassNotFoundException {
        super(parent, modal);
        initComponents();
       ctrlCicloEscolar ctrlcicloescolar=new ctrlCicloEscolar();
       cicloActivo=ctrlcicloescolar.getCicloActivo();
       this.lblCicloEscolar.setText(cicloActivo.getPeriodo());
       ctrlGrupos ctrlgrupos=new ctrlGrupos();
      ArrayList<Grupos> listagrupos= ctrlgrupos.getGruposListasAsistencia(cicloActivo.getIdCiclo());
      this.cmbGrupos.setModel(  ctrlgrupos.getComboGruposInscripciones(listagrupos));
      
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cmbGrupos = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        btnGenerar = new javax.swing.JButton();
        cmbAsignaturas = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        cmbSalir = new javax.swing.JButton();
        lblprofesor = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblCicloEscolar = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Configuraci√≥n del Reporte"));

        jLabel2.setText("Ciclo Escolar:");

        cmbGrupos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbGruposItemStateChanged(evt);
            }
        });

        jLabel3.setText("Semestre-Grupo-Carrera:");

        btnGenerar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/printer.png"))); // NOI18N
        btnGenerar.setText("Imprimir");
        btnGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarActionPerformed(evt);
            }
        });

        cmbAsignaturas.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbAsignaturasItemStateChanged(evt);
            }
        });

        jLabel1.setText("Asignatura:");

        cmbSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/salir.png"))); // NOI18N
        cmbSalir.setText("Salir");
        cmbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSalirActionPerformed(evt);
            }
        });

        lblprofesor.setText("Profesor");

        jLabel4.setText("Profesor:");

        lblCicloEscolar.setText("jLabel5");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(22, 22, 22))
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(36, 36, 36))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(71, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(64, 64, 64)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblprofesor)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnGenerar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cmbGrupos, 0, 282, Short.MAX_VALUE)
                    .addComponent(cmbAsignaturas, 0, 282, Short.MAX_VALUE)
                    .addComponent(lblCicloEscolar))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblCicloEscolar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbGrupos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cmbAsignaturas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblprofesor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnGenerar)
                            .addComponent(cmbSalir))
                        .addGap(26, 26, 26))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void btnGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarActionPerformed
        try {
           
           
            generarReporte();
           
            
        } catch (JRException ex) {
            Logger.getLogger(frmGenerarListasRecuperacion.class.getName()).log(Level.SEVERE, null, ex);
        }
    

    
}//GEN-LAST:event_btnGenerarActionPerformed
private void generarReporte() throws JRException
{
        try {
            OfertaAcademica e=(OfertaAcademica) this.cmbAsignaturas.getSelectedItem();
             Grupos g=(Grupos) this.cmbGrupos.getSelectedItem();   
             
             
             String cadena=   g.toString();
             String []partes=cadena.split("-");
             
             String[]semestre=partes[0].split(" ");
             String[] grupo=partes[1].split(" ");
             EncabezadoListasAsistencia encabezado=new EncabezadoListasAsistencia();
              encabezado.setDocente(this.lblprofesor.getText());
              encabezado.setSemestre(semestre[1]+"¬∞");
              encabezado.setGrupo("'\'"+grupo[1]+"'\'");
              encabezado.setEspecialidad(partes[2]);
              encabezado.setPeriodo_escolar(cicloActivo.getPeriodo());
              encabezado.setAsignatura(e.getAsignatura().getNombre());
                          Map pars = new HashMap();
                          pars.put("pdocente",encabezado.getDocente());
                          pars.put("psemestre",encabezado.getSemestre());
                          pars.put("pgrupo",encabezado.getGrupo());
                          pars.put("pespecialidad",encabezado.getEspecialidad());
                          pars.put("pciclo",encabezado.getPeriodo_escolar());
                          pars.put("pmateria",encabezado.getAsignatura());
                          ctrlAlumnosGrupo ctrlalumnos=new ctrlAlumnosGrupo();
                          
                         // System.out.println(ciclo.getIdCiclo() +"-"+ e.getIdOfertaAcademica());
             ArrayList<AlumnosRecuperacion> listaAsistencia=ctrlalumnos.getListaRecuperacion(cicloActivo.getIdCiclo(), e.getIdOfertaAcademica());
             JRDListaRecuperacion reporte=new JRDListaRecuperacion();
             if(listaAsistencia!=null)
             {
                 for(int i=0;i<listaAsistencia.size();i++)
                 { 
                     reporte.addRegistroReporte(listaAsistencia.get(i));
                 }
                  String ruta=System.getProperty("user.dir");
              String archivo=ruta+"\\src\\Reportes\\rptListasRecuperacion.jrxml";
                  JasperDesign jasperDesign = JRXmlLoader.load(archivo); //Cargamos el reporte jrxml para generar el jasper
                     JasperReport jasper=JasperCompileManager.compileReport(jasperDesign); //Compilamos para generar el jasper
                     JasperPrint jasperprint=JasperFillManager.fillReport(jasper, pars,reporte);
                     if(jasperprint.getPages().size()>0) //Vemos si el reporte tiene hojas (registros) sino no tiene caso abrir el visor
                       {
                           JasperViewer.viewReport(jasperprint,false);
                           
                            
                            
                        }
                        else
                        {
                        JOptionPane.showMessageDialog(null, "NO HAY REGISTROS"); 
                        }
             
             }
        } catch (SQLException ex) {
            Logger.getLogger(frmGenerarListasRecuperacion.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(frmGenerarListasRecuperacion.class.getName()).log(Level.SEVERE, null, ex);
        }
           
}
private void cmbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSalirActionPerformed
 // TODO add your handling code here:
    this.dispose();
}//GEN-LAST:event_cmbSalirActionPerformed

private void cmbGruposItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbGruposItemStateChanged
        try {
            // TODO add your handling code here:
               ctrlOfertaAcademica ctrloferta=new ctrlOfertaAcademica();
               Grupos g=(Grupos) this.cmbGrupos.getSelectedItem();
               ArrayList<OfertaAcademica> listaoferta= ctrloferta.getOfertaAcademica(g.getIdGrupo(), 1);
               
               this.cmbAsignaturas.setModel( ctrloferta.getAsignaturasGrupo(listaoferta));
               
               
        } catch (SQLException ex) {
            Logger.getLogger(frmGenerarListasRecuperacion.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(frmGenerarListasRecuperacion.class.getName()).log(Level.SEVERE, null, ex);
        }
    
}//GEN-LAST:event_cmbGruposItemStateChanged

private void cmbAsignaturasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbAsignaturasItemStateChanged
        try {
            // TODO add your handling code here:
               OfertaAcademica e=(OfertaAcademica) this.cmbAsignaturas.getSelectedItem();
               
               ctrlOfertaAcademica ctrloferta=new ctrlOfertaAcademica();
               Grupos g=(Grupos) this.cmbGrupos.getSelectedItem();
             // System.out.println(  e.getAsignatura().getIdAsignatura()); 
               
               Personal persona =ctrloferta.getPersonalAsignatura(g.getIdGrupo(),e.getAsignatura().getIdAsignatura());
               
               
               if(persona!=null)
               {
               this.lblprofesor.setText( persona.getNombre() + " " + persona.getApePaterno()+ " " + persona.getApeMaterno());
               }
               else
               {
               this.lblprofesor.setText("");
               }
        } catch (SQLException ex) {
            Logger.getLogger(frmGenerarListasRecuperacion.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(frmGenerarListasRecuperacion.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_cmbAsignaturasItemStateChanged
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmGenerarListasRecuperacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmGenerarListasRecuperacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmGenerarListasRecuperacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmGenerarListasRecuperacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                try {
                    frmGenerarListasRecuperacion dialog = new frmGenerarListasRecuperacion(new javax.swing.JFrame(), true);
                    dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                        @Override
                        public void windowClosing(java.awt.event.WindowEvent e) {
                            System.exit(0);
                        }
                    });
                    dialog.setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(frmGenerarListasRecuperacion.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(frmGenerarListasRecuperacion.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGenerar;
    private javax.swing.JComboBox cmbAsignaturas;
    private javax.swing.JComboBox cmbGrupos;
    private javax.swing.JButton cmbSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblCicloEscolar;
    private javax.swing.JLabel lblprofesor;
    // End of variables declaration//GEN-END:variables
}
